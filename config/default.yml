backend:
    pollingInterval:
        default: 30000
        streaming: 30000
        cheermotes: 600000
    shared:
        databaseUri: null
    followingPollingLimit: 5
    logging:
        file: null
        level: error
    topic:
        twitch:
            outgoingApplicationAuthenticationCommand: "external:backend:twitch:outgoing:application:authentication:command"
            outgoingApplicationUnauthenticationCommand: "external:backend:twitch:outgoing:application:unauthentication:command"
            outgoingUserAuthenticationCommand: "external:backend:twitch:outgoing:user:authentication:command"
            outgoingUserUnauthenticationCommand: "external:backend:twitch:outgoing:user:unauthentication:command"
            incomingIrcCommand: "external:backend:twitch:incoming:irc:command"
            outgoingIrcCommand: "external:backend:twitch:outgoing:irc:command"
            incomingPubSubEvent: "external:backend:twitch:incoming:pubsub:event"
    twitch:
        databaseUri: null
        appClientId: null
        appClientSecret: null
        appOAuthRedirectUrl: null
        appScopes:
            - channel_feed_read
        appTokenRefreshInterval: 2700000
        ircWebSocketUri: "wss://irc-ws.chat.twitch.tv:443/"
        oauthAuthorizationUri: "https://api.twitch.tv/kraken/oauth2/authorize"
        oauthTokenRevocationUri: "https://api.twitch.tv/kraken/oauth2/revoke"
        oauthTokenUri: "https://api.twitch.tv/kraken/oauth2/token"
        oauthTokenVerificationUri: "https://api.twitch.tv/kraken"
        pubSubWebSocketUri: "wss://pubsub-edge.twitch.tv/"
        userName: null
        usersDataUri: "https://api.twitch.tv/helix/users"
    vidy:
        rootUrl: null
        videoLinkBaseUrl: null
        keyId: null
        keySecret: null
        systemUuid: null
frontend:
    port: 3000
    static:
        publicRootDirectory: "../server-frontend/public"
shared:
    applicationName: botten-nappet
    logging:
        file: null
        level: error
    topic:
        application:
            authenticationEvent: "internal:shared:application:authentication:event"
            unauthenticationEvent: "internal:shared:application:unauthentication:event"
            authenticatedEvent: "internal:shared:incoming:application:authenticated:event"
            unauthenticatedEvent: "internal:shared:incoming:application:unauthenticated:event"
        user:
            authenticationEvent: "internal:shared:user:authentication:event"
            unauthenticationEvent: "internal:shared:user:unauthentication:event"
            authenticatedEvent: "internal:shared:incoming:user:authenticated:event"
            unauthenticatedEvent: "internal:shared:incoming:user:unauthenticated:event"
        twitch:
            incomingCheeringEvent: "internal:shared:twitch:incoming:cheering:event"
            incomingWhisperEvent: "internal:shared:twitch:incoming:whisper:event"
            incomingCheeringWithCheermotesEvent: "internal:shared:twitch:incoming:cheering-with-cheermotes:event"
            incomingCheermotesEvent: "internal:shared:twitch:incoming:cheermotes:event"
            incomingFollowingEvent: "internal:shared:twitch:incoming:following:event"
            incomingStreamingEvent: "internal:shared:twitch:incoming:streaming:event"
            incomingSubscriptionEvent: "internal:shared:twitch:incoming:subscription:event"
        vidy:
            incomingSearchResultEvent: "external:shared:vidy:incoming:search:result:event"
            outgoingSearchCommand: "external:shared:vidy:outgoing:search:command"
    zmq:
        keys:
            server:
                private: null
                public: null
            client:
                private: null
                public: null
        address:
            xpublisher: "tcp://127.0.0.1:54859"
            xsubscriber: "tcp://127.0.0.1:54860"
templates:
    topics-subscriber:
        templatePaths:
            topic:
                fileName: ${groupNameParamCase}-${topicNameParamCase}-topic.ts
                outputDirectory: ../topic/
                template: ./topic.ts.m4
            topicsPublisher:
                fileName: ${groupNameParamCase}-${topicNameParamCase}-topic-publisher.ts
                outputDirectory: ../topic-publisher/
                template: ./topic-publisher.ts.m4
            topicsSubscriber:
                fileName: ${groupNameParamCase}-${topicNameParamCase}-single-item-json-topics-subscriber.ts
                outputDirectory: ../topics-subscriber/
                template: ./single-item-topics-subscriber.ts.m4
        sections:
            backend:
                configClassPath: "@botten-nappet/backend-shared/src/config/backend-config"
                groups:
                    twitch:
                        topicConfigObjectPath: backend.topic.twitch
                        hasSeparatePackage: true
            shared:
                configClassPath: "@botten-nappet/shared/src/config/shared-topics-config"
                groups:
                    application:
                        topicConfigObjectPath: shared.topic.application
                        hasSeparatePackage: false
                    user:
                        topicConfigObjectPath: shared.topic.user
                        hasSeparatePackage: false
                    twitch:
                        topicConfigObjectPath: shared.topic.twitch
                        hasSeparatePackage: true
                    vidy:
                        topicConfigObjectPath: shared.topic.vidy
                        hasSeparatePackage: true
graphs:
    enabled: false
    dependencies:
        server:
            shared:
                ignoredDependencyNames:
                    - BackendConfig
                    - Container
                    - GracefulShutdownManager
                    - PinoLogger
                    - Publisher
                    - SharedTopicsConfig
                    - TopicHelper
                    - ZmqConfig
                suffixes:
                    - Config
                    - PollingClientIdConnection
                    - SingleItemJsonTopicsSubscriber
                    - Topic
                    - TopicPublisher
                manual:
                    TwitchApplicationAuthentication:
                        - ApplicationAccessTokenProvider
                        - ApplicationTokenManager
                        - PollingApplicationTokenConnection
                    TwitchUserAuthentication:
                        - UserAccessTokenProvider
                        - UserAugmentedTokenProvider
                        - UserChannelNameProvider
                        - UserIdProvider
                        - UserNameProvider
                        - UserRawTokenProvider
                        - UserStorageManager
                        - UserTokenHelper
                        - UserTokenManager
                graphvizOutputFilenameTemplate: "dependency-graph.${Date.now()}.gv"
